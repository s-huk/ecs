input { 
	pipeline { 
		address => "nginx_access_log-ecs" 
	} 
}
filter {
	#mutate {
	#	remove_field => "source"
	#}
	grok {
		match => { "message" => ["%{IPORHOST:[client][ip]} - %{DATA:[user][name]} \[%{HTTPDATE:[timestamp]}\] \"%{WORD:[http][request][method]} %{DATA:[url][original]} HTTP/%{NUMBER:[http][version]}\" %{NUMBER:[http][response][status_code]} %{NUMBER:[http][response][bytes]}( \"%{DATA:[http][request][referrer]}\")?( \"%{DATA:[user_agent][original]}\")?"]}
		remove_field => "message"
	}
	#mutate {
	#	add_field => { "read_timestamp" => "%{@timestamp}" }
	#}
	date {
		match => [ "[timestamp]", "dd/MMM/YYYY:H:m:s Z" ]
		remove_field => "[timestamp]"
	}
	useragent {
		source => "[user_agent][original]"
		target => "[user_agent]"
		remove_field => [ "[user_agent][minor]", "[user_agent][patch]", "[user_agent][os]" ]
	}
	### geoip Filter ist nicht ECS konform, Felder mÃ¼ssten einzeln umbenannt werden
	geoip {
		source => "[client][ip]"
		target => "[client][geo]"
		database => "/etc/logstash/avm-git/data/GeoIP2City.mmdb"
		fields => ["city_name", "country_code2", "country_name", "region_name", "location"]
	}
	mutate {
        rename => { "[host]" => "[host][hostname]" }
        remove_field => [ beat, type, offset, input_type, log_type, read_timestamp, source, "[client][geo][longitude]" , "[client][geo][longitude]" ]
        rename => { "[user_agent][device]" => "[user_agent][device][name]" }
        rename => { "[app_name]" => "[fields][service_type]" }
        rename => { "[client][geo][country_code2]" => "[client][geo][country_iso_code]" }
        rename => { "[user_agent][os_name]" => "[user_agent][os][name]" }
        rename => { "[user_agent][major]" => "[user_agent][version]" }

	}
}
output {
	elasticsearch {
	    hosts => ["http://localhost:9200"]
	    index => "nginx_access_log-ecs-%{[fields][service_type]}-1"
    }
}
