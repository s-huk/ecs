input {
	pipeline { 
		address => "nginx_access_log-ecs" 
	} 
}
filter {
	grok {
		match => { "message" => ["%{IPORHOST:[client][ip]} - %{DATA:[user][name]} \[%{HTTPDATE:[timestamp]}\] \"%{WORD:[http][request][method]} %{DATA:[url][original]} HTTP/%{NUMBER:[http][version]}\" %{NUMBER:[http][response][status_code]} %{NUMBER:[http][response][bytes]}( \"%{DATA:[http][request][referrer]}\")?( \"%{DATA:[user_agent][original]}\")?"]}
		#remove_field => [ "message" ]
	}
	date {
		match => [ "timestamp", "dd/MMM/YYYY:H:m:s Z" ]
		remove_field => [ "timestamp" ]
	}
	useragent {
		source => "[user_agent][original]"
		target => "user_agent"
		remove_field => [ "[user_agent][minor]", "[user_agent][patch]", "[user_agent][os_name]", "[user_agent][os_minor]", "[user_agent][build]" ]
	}
	geoip {
		source => "[client][ip]"
		target => "[client][geo]"
		database => "/etc/logstash/avm-git/data/GeoIP2City.mmdb"
		fields => ["city_name", "country_code2", "country_name", "region_name", "location"]
		remove_field => [ "[client][geo][longitude]", "[client][geo][longitude]" ]
	}
	mutate {
		remove_field => [ "beat", "type", "offset", "input_type", "log_type", "source" ]
		rename => { "[app_name]" => "[fields][service_type]" }
		rename => { "[host]" => "[host][hostname]" }
		### Rename UserAgent
		#rename => { "[user_agent][device]" => "[user_agent][device][name]" }
		#rename => { "[user_agent][os]" => "[user_agent][os][name]" }
		#rename => { "[user_agent][os_major]" => "[user_agent][os][version]" }
		#rename => { "[user_agent][major]" => "[user_agent][version]" }
		### Rename GeoIP
		rename => { "[client][geo][country_code2]" => "[client][geo][country_iso_code]" }
	}
}
output {
	elasticsearch {
	    hosts => ["http://localhost:9200"]
	    index => "nginx_access_log-ecs-%{[fields][service_type]}-1"
    }
}
