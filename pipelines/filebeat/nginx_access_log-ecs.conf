input { 
	pipeline { 
		address => "nginx_access_log-ecs" 
	} 
}
filter {
	mutate {
		remove_field => "source"
	}
	grok {
		match => { "message" => ["%{IPORHOST:[client][ip]} - %{DATA:[user][name]} \[%{HTTPDATE:[timestamp]}\] \"%{WORD:[http][request][method]} %{DATA:[url][original]} HTTP/%{NUMBER:[http][version]}\" %{NUMBER:[http][response][status_code]} %{NUMBER:[http][response][bytes]}( \"%{DATA:[http][request][referrer]}\")?( \"%{DATA:[user_agent][original]}\")?"]}
		remove_field => "message"
	}
	mutate {
		add_field => { "read_timestamp" => "%{@timestamp}" }
	}
	date {
		match => [ "[timestamp]", "dd/MMM/YYYY:H:m:s Z" ]
		remove_field => "[timestamp]"
	}
	useragent {
		source => "[user_agent][original]"
		target => [user_agent]
	}
	### geoip Filter ist nicht ECS konform, Felder mÃ¼ssten einzeln umbenannt werden
	#geoip {
	#	source => "[source][ip]"
	#	target => "[geo]"
	#}
	mutate {
		rename => { "[host]" => "[avm][host]" }
		remove_field => [ beat, type, offset, input_type, log_type ]
		rename => {"[user_agent][device]" => "[user_agent][device][name]" }
		rename => {"[app_name]" => "[fields][service_type]" }
	}
}
output {
	elasticsearch {
	hosts => ["http://localhost:9200"]
	index => "avm-filebeat-%{[fields][service_type]}"
	}
}