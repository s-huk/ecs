# https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#8.2.3
#      1   process_name '[' pid ']:'                            haproxy[14389]:
#      2   client_ip ':' client_port                             10.0.1.2:33317
#      3   '[' request_date ']'                      [06/Feb/2009:12:14:14.655]
#      4   frontend_name                                                http-in
#      5   backend_name '/' server_name                             static/srv1
#      6   TR '/' Tw '/' Tc '/' Tr '/' Ta*                       10/0/30/69/109
#      7   status_code                                                      200
#      8   bytes_read*                                                     2750
#      9   captured_request_cookie                                            -
#     10   captured_response_cookie                                           -
#     11   termination_state                                               ----
#     12   actconn '/' feconn '/' beconn '/' srv_conn '/' retries*    1/1/1/1/0
#     13   srv_queue '/' backend_queue                                      0/0
#     14   '{' captured_request_headers* '}'                   {haproxy.1wt.eu}
#     15   '{' captured_response_headers* '}'                                {}
#     16   '"' http_request '"'                      "GET /index.html HTTP/1.1"
input { 
	pipeline { 
		address => "haproxy_access_log-legacy" 
	} 
}
filter {
    mutate {
            rename => { "source" => "[file][path]" }
            rename => { "offset" => "[avm][kafka][offset]" }
            remove_field => [ "[host][name]" ]
    }
    grok {
	    id => "grok-haproxy_access_log"
        named_captures_only => true
		match => { "message" => "(?:%{SYSLOGTIMESTAMP:[trash][syslog_timestamp]}|%{TIMESTAMP_ISO8601:[trash][timestamp8601]}) %{IPORHOST:[trash][syslog_server]} %{PROG:[process][name]}(?:\[%{POSINT:[process][pid]}\])?: %{IP:[source][ip]}:%{INT:[source][port]} \[(?<tmphaproxydate>%{MONTHDAY}/%{MONTH}/%{YEAR}:(?!<[0-9])%{HOUR}:%{MINUTE}(?::%{SECOND})(?![0-9]).%{INT})\] %{NOTSPACE:[trash][frontend_name]} %{NOTSPACE:[service][name]}/%{NOTSPACE:[host][name]} %{INT:[trash][time_request]}/%{INT:[trash][time_queue]}/%{INT:[trash][time_backend_connect]}/%{INT:[trash][time_backend_response]}/%{NOTSPACE:[event][duration]} %{INT:[http][request][status_code]} %{NOTSPACE:[source][bytes]} %{DATA:[trash][captured_request_cookie]} %{DATA:[trash][captured_response_cookie]} %{NOTSPACE:[trash][termination_state]} %{INT:[trash][actconn]}/%{INT:[trash][feconn]}/%{INT:[trash][beconn]}/%{INT:[trash][srvconn]}/%{NOTSPACE:[trash][retries]} %{INT:[trash][srv_queue]}/%{INT:[trash][backend_queue]} (\{%{HAPROXYCAPTUREDREQUESTHEADERS}\})?( )?(\{%{HAPROXYCAPTUREDRESPONSEHEADERS}\})?( )?\"(<BADREQ>|(%{WORD:[http][request][method]} (%{URIPROTO:http_proto}://)?(?:%{USER:http_user}(?::[^@]*)?@)?(?:%{URIHOST:http_host})?(?:%{URIPATHPARAM:[url][path]})?( HTTP/%{NUMBER:[http][version]})?))?\"?" }
		remove_field => [ "message" ]
	}
    date {
        match => [ "tmphaproxydate", "dd/MMM/yyyy:HH:mm:ss.SSS" ]
    }
    mutate {
            #rename => { "tmphaproxydate" => "[haproxy][accept_date]" }
            remove_field => [ "tmphaproxydate" ]
            remove_field => [ "trash" ]
    }
}
output {
	elasticsearch {
	hosts => ["http://localhost:9200"]
	#index => "filebeat-%{[fields][service_type]}-%{+YYYY.MM.dd}"
	index => "filebeat-%{[fields][service_type]}"
	}
}
